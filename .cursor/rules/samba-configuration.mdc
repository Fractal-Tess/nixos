# Samba Configuration Guidelines

## Samba Service Structure

### Core Files

- [modules/nixos/services/samba/share.nix](mdc:modules/nixos/services/samba/share.nix) - Samba share configuration
- [modules/nixos/services/samba/mount.nix](mdc:modules/nixos/services/samba/mount.nix) - Samba mount configuration
- [modules/nixos/services/samba/default.nix](mdc:modules/nixos/services/samba/default.nix) - Main Samba module

## Samba Share Configuration Pattern

### Share Definition

```nix
{
  name = "share_name";
  path = "/path/to/share";
  readOnly = false;
  guestOk = false;
  forceUser = "username";
  forceGroup = "users";
  createMask = "0644";
  directoryMask = "0755";
}
```

### Host Configuration

```nix
# In hosts/[host]/configuration.nix
modules.services.samba.share = {
  enable = true;
  shares = [
    {
      name = "home";
      path = "/home/username";
      readOnly = false;
      guestOk = false;
      forceUser = "username";
      forceGroup = "users";
      createMask = "0644";
      directoryMask = "0755";
    }
  ];
};
```

## Samba User Management via SOPS

### SOPS Integration

```nix
# In host configuration
modules.services.sops = {
  enable = true;
  samba = {
    enable = true;
    users = [
      {
        name = "username";
        secretKey = "samba_username_password";
      }
    ];
  };
};
```

### Secret Storage

- Store Samba passwords in [secrets/secrets.yaml](mdc:secrets/secrets.yaml)
- Use format: `samba_username_password: ENC[...]`
- Passwords are automatically managed during system activation

## Samba Mount Configuration

### Mount Definition

```nix
{
  mountPoint = "/mnt/share";
  device = "//server/share";
  username = "smbuser";
  password = "smbpass";
}
```

### Host Configuration

```nix
modules.services.samba.mount = {
  enable = true;
  shares = [
    {
      mountPoint = "/mnt/remote";
      device = "//server.netbird.cloud/share";
      username = "smbuser";
      password = "smbpass";
    }
  ];
};
```

## Security Best Practices

### User Management

- **DO NOT** use `validUsers` and `initialPassword` in share configuration
- Use SOPS for password management instead
- Let the system automatically create/update Samba users

### Share Security

- Set `guestOk = false` for authenticated shares
- Use `forceUser` and `forceGroup` for proper file ownership
- Set appropriate `createMask` and `directoryMask` permissions

### Network Security

- Use NetBird or VPN for remote shares
- Avoid storing plaintext passwords in configuration
- Use SOPS-encrypted secrets for all passwords

## Common Configuration Patterns

### Home Directory Share

```nix
{
  name = "home";
  path = "/home/username";
  readOnly = false;
  guestOk = false;
  forceUser = "username";
  forceGroup = "users";
  createMask = "0644";
  directoryMask = "0755";
}
```

### Media Share

```nix
{
  name = "media";
  path = "/mnt/vault/media";
  readOnly = false;
  guestOk = false;
  forceUser = "username";
  forceGroup = "users";
  createMask = "0644";
  directoryMask = "0755";
}
```

### Backup Share

```nix
{
  name = "backup";
  path = "/mnt/backup";
  readOnly = false;
  guestOk = false;
  forceUser = "username";
  forceGroup = "users";
}
```

## Troubleshooting

### Check Samba Users

```bash
sudo pdbedit -L
```

### Check Samba Configuration

```bash
sudo cat /etc/samba/smb.conf
```

### Test Samba Connection

```bash
smbclient //server/share -U username
```

### Reset Samba Password

```bash
sudo smbpasswd -a username
```

## Migration from Hardcoded Passwords

### Before (Insecure)

```nix
{
  name = "share";
  validUsers = [ "username" ];
  initialPassword = "plaintext_password";
}
```

### After (Secure)

```nix
# In share configuration
{
  name = "share";
  # No password configuration here
}

# In SOPS configuration
modules.services.sops.samba = {
  enable = true;
  users = [
    {
      name = "username";
      secretKey = "samba_username_password";
    }
  ];
};
```

description:
globs:
alwaysApply: false

---
